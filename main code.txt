#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>
#include <LiquidCrystal_I2C.h>
#include <dht.h>


LiquidCrystal_I2C lcd(0x27,16,2);


#define SS_PIN 53
#define RST_PIN 48

Servo Servo1;
Servo Servo2;
int pos = 0; 


String tagId = "";
String VisitorID = "63B6C72E";
String StaffId = "E059CE19";
String Display_1st_line = "";
String Display_2nd_line = "";

uint8_t BlueLightPin = 11;
uint8_t RedLightPin = 10;
uint8_t RoomLightPin = 3;
uint8_t RoomFanPin = 4;
uint8_t BuzzerPin = 9;
uint8_t ServoPin1 = 12;
uint8_t ServoPin2 = 13;
uint8_t DHT_Pin = 8;
uint8_t PIR_Pin = 7;
uint8_t Patient_Arrival_Signal_Pin = 6;
uint8_t Emergency_Button_pin = 5;

dht DHT11;

MFRC522 mfrc522(SS_PIN, RST_PIN);

void setup() {
  pinMode(BlueLightPin, OUTPUT);  
  pinMode(RedLightPin, OUTPUT);  
  pinMode(RoomLightPin, OUTPUT);  
  pinMode(RoomFanPin, OUTPUT);  
  pinMode(BuzzerPin, OUTPUT);  
  pinMode(PIR_Pin, INPUT);  
  pinMode(Patient_Arrival_Signal_Pin, INPUT_PULLUP);  
  pinMode(Emergency_Button_pin, INPUT_PULLUP);  

  Servo1.attach(ServoPin1);
  Servo2.attach(ServoPin2);
  Servo1.write(pos);              // tell servo to go to position in variable 'pos'
  Servo2.write(pos);              // tell servo to go to position in variable 'pos'


  digitalWrite(BlueLightPin, HIGH);
  digitalWrite(RedLightPin, HIGH);
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  Serial.println("Scan you RFID card");

  lcd.init();
  lcd.clear();         
  lcd.backlight(); 

  lcd.setCursor(0,0); 
  lcd.print("Welcome !");

}





bool P_arrival_state = 0;
uint8_t p_signal = 0;
bool current_visiting_state = 0;
bool One_time_flag = 1;
bool visitor_inter_exit_flag = 0;
uint8_t visitor_no = 1;


int visiting_time = 1000*15; // set visiting time for 15 sec
unsigned long visiting_finish_time = 0;
unsigned long Total_Milis_From_Start = millis();

// --------------------------------------------- Visiting Management Function ----------------------------------------->

void Visiting_Management(){
  p_signal = digitalRead(Patient_Arrival_Signal_Pin);

  
  if(!current_visiting_state && !P_arrival_state && One_time_flag){
    lcd.clear();
    lcd.setCursor(0,0); 
    lcd.print((String)"Visitor #"+visitor_no+", be");
    lcd.setCursor(0,1);
    lcd.print("ready to enter");

    One_time_flag = 0;
    delay(5000);

    Display_1st_line = (String)"#"+visitor_no+", Wait for the";
    Display_2nd_line = "patient to enter";
    lcd.clear();
    lcd.setCursor(0,0); 
    lcd.print(Display_1st_line);
    lcd.setCursor(0,1); 
    lcd.print(Display_2nd_line);
    visitor_inter_exit_flag = 0;
  }
  if(p_signal == LOW && !P_arrival_state){ // when switch is on
    Display_1st_line = "Patient arrived ";
    Display_2nd_line = "you can enter";
    lcd.clear();
    lcd.setCursor(0,0); 
    lcd.print(Display_1st_line);
    lcd.setCursor(0,1); 
    lcd.print(Display_2nd_line);
    P_arrival_state = 1;
  }
}



// --------------------------------------------- RFID Reading Function ----------------------------------------->



void RFID_Reading(){
  if( ! mfrc522.PICC_IsNewCardPresent()){
    return;
  }

  if( ! mfrc522.PICC_ReadCardSerial()){
    return;
  }

  // RFID card id scanning ...
  tagId = "";
  for(int i=0; i<4; i++){
    tagId.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  tagId.toUpperCase();
  Serial.println(tagId);


  if(tagId == VisitorID && P_arrival_state){
    digitalWrite(RedLightPin, HIGH);
    digitalWrite(BlueLightPin, LOW);
    tone(BuzzerPin, 1000, 80);
    delay(120);
    tone(BuzzerPin, 1000, 80);

    lcd.clear();  
    lcd.setCursor(0,0); 
    lcd.print("Opening Visiting");
    lcd.setCursor(0,1);  
    lcd.print("Room's Door");

    
    // opening door using servo motor (SG90)

    for (pos = 0; pos <= 90; pos += 3) { 
      Servo1.write(pos);          
      Serial.println(pos);
      delay(15);  
    }
    delay(800);
    digitalWrite(BlueLightPin, HIGH);
    digitalWrite(RedLightPin, HIGH);
    delay(1000);
    for (pos = 90; pos >= 0; pos -= 3) {
      Serial.println(pos);
      Servo1.write(pos);              
      delay(15);                       
    }

    visiting_finish_time = Total_Milis_From_Start + visiting_time;
    visitor_inter_exit_flag = 1;
    One_time_flag = 1;
  }
  else if(tagId == StaffId){
    digitalWrite(RedLightPin, HIGH);
    digitalWrite(BlueLightPin, LOW);
    tone(BuzzerPin, 1000, 80);
    delay(120);
    tone(BuzzerPin, 1000, 80);

    lcd.clear();  
    lcd.setCursor(0,0);
    lcd.print("Opening Staff");
    lcd.setCursor(0,1);
    lcd.print("Door");


    Servo2.write(95);   
    delay(800);
    digitalWrite(BlueLightPin, HIGH);
    digitalWrite(RedLightPin, HIGH);
    delay(1500);
    for (pos = 90; pos >= 0; pos -= 10) { 
    Servo2.write(pos);         
    delay(10);                      
    }

    lcd.clear();  
    lcd.setCursor(0,0); 
    lcd.print(Display_1st_line);
    lcd.setCursor(0,1); 
    lcd.print(Display_2nd_line);
  }
  else{
    digitalWrite(BlueLightPin, HIGH);
    digitalWrite(RedLightPin, LOW);
    tone(BuzzerPin, 1000);
    delay(500);
    noTone(BuzzerPin);

    lcd.clear();  
    lcd.setCursor(0,0);
    lcd.print("Invalid Request");

    delay(2000);

    lcd.clear();  
    lcd.setCursor(0,0);  
    lcd.print(Display_1st_line);
    lcd.setCursor(0,1);  
    lcd.print(Display_2nd_line);
  }
  mfrc522.PICC_HaltA();

}


// --------------------------------------------- Emergency Button Function ----------------------------------------->



void Emergency_Button(){
  uint8_t emergency_signal = digitalRead(Emergency_Button_pin);

  if(!emergency_signal){
    lcd.clear();  
    lcd.setCursor(0,0);   
    lcd.print("Emergency");
    lcd.setCursor(0,1);   
    lcd.print("Situation !");

    uint8_t i = 0;
    Servo2.write(95);   
    delay(800);
    for (pos = 90; pos >= 0; pos -= 10) { 
    Servo2.write(pos);         
    delay(10);                      
    }
    for(i=0; i<3; i++){
      digitalWrite(RedLightPin, LOW);
      tone(BuzzerPin, 1000, 500);
      delay(700);
      digitalWrite(RedLightPin, HIGH);
      tone(BuzzerPin, 1000, 500);
      delay(700);
    }

    lcd.clear();  
    lcd.setCursor(0,0);  
    lcd.print(Display_1st_line);
    lcd.setCursor(0,1);   
    lcd.print(Display_2nd_line);
    
  }
}


//------------------------------------------------ Room Automation Function ------------------------------------>

uint8_t pir_signal = 0;
uint8_t light_state = 0;
uint8_t temp_state = 0;
uint8_t fan_on_off_flag = 0;
unsigned long light_finish_time = 0;
unsigned long temp_read_delay_time = 0;


void Room_Automation(){
  pir_signal = digitalRead(PIR_Pin);
  // Serial.print("pir_signal = ");
  // Serial.println(pir_signal);
  if(light_finish_time <= Total_Milis_From_Start){
    if(pir_signal){
      digitalWrite(RoomLightPin, HIGH);
      light_finish_time = Total_Milis_From_Start + 8000;
    }
    else
      digitalWrite(RoomLightPin, LOW);
  }


  if(temp_read_delay_time <= Total_Milis_From_Start){
    DHT11.read11(DHT_Pin);

    if(DHT11.temperature > 31){
      if(!temp_state)
        temp_state = 1;
    }
    else
      if(temp_state)
        temp_state = 0;

    if(temp_state && !fan_on_off_flag){
      digitalWrite(RoomFanPin, HIGH);
      fan_on_off_flag = 1;
    }
    else if(!temp_state && fan_on_off_flag){
      digitalWrite(RoomFanPin, LOW);
      fan_on_off_flag = 0;
    }
    Serial.print("Temp = ");
    Serial.println(DHT11.temperature);
    temp_read_delay_time = Total_Milis_From_Start + 1500;
  }

}





//------------------------------------------------ Loop Start From Here ------------------------------------>

void loop() {
  Total_Milis_From_Start = millis();
  Room_Automation();
  Visiting_Management();

  RFID_Reading(); // RFID Scanning

  Emergency_Button();


  if(visitor_inter_exit_flag && One_time_flag){

    Display_1st_line = (String)"Visitor #"+visitor_no+" is";
    Display_2nd_line = "visiting patient";
    lcd.clear();
    lcd.setCursor(0,0);   
    lcd.print(Display_1st_line);
    lcd.setCursor(0,1);   
    lcd.print(Display_2nd_line);
    One_time_flag = 0;
  }
  
  if(visiting_finish_time <= Total_Milis_From_Start && visitor_inter_exit_flag){
    P_arrival_state = 0;
    One_time_flag = 1;
    visitor_no++;
    Serial.println("Here");
  }

  // delay(100);

  

  
  


    


}











  // pos = 0;



  // else{
  //   Serial.println("Mismatched");
  //   digitalWrite(BlueLightPin, HIGH);
  //   digitalWrite(RedLightPin, LOW);
  //   tone(BuzzerPin, 1000);
  //   delay(500);
  //   noTone(BuzzerPin);


  //   lcd.clear();  
  //   lcd.setCursor(0,0);   //Set cursor to character 2 on line 0
  //   lcd.print("Opening Staff");
  //   lcd.setCursor(0,1);   //Set cursor to character 2 on line 0
  //   lcd.print("Door");


  //   Serial.println(pos);
  //   Servo2.write(95);   
  //   delay(800);
  //   digitalWrite(BlueLightPin, HIGH);
  //   digitalWrite(RedLightPin, HIGH);
  //   delay(1500);
  //   for (pos = 90; pos >= 0; pos -= 10) { // goes from 180 degrees to 0 degrees
  //   Servo2.write(pos);              // tell servo to go to position in variable 'pos'
  //   delay(10);                       // waits 15ms for the servo to reach the position
  //   }
  // }
  // 





